"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[55172],{15680:(e,a,t)=>{t.d(a,{xA:()=>d,yg:()=>m});var r=t(96540);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o=r.createContext({}),c=function(e){var a=r.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},d=function(e){var a=c(e.components);return r.createElement(o.Provider,{value:a},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},g=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(t),g=n,m=u["".concat(o,".").concat(g)]||u[g]||p[g]||l;return t?r.createElement(m,i(i({ref:a},d),{},{components:t})):r.createElement(m,i({ref:a},d))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=t.length,i=new Array(l);i[0]=g;var s={};for(var o in a)hasOwnProperty.call(a,o)&&(s[o]=a[o]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var c=2;c<l;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},55493:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var r=t(58168),n=(t(96540),t(15680));const l={title:"Pulsar Example",sidebar_position:2},i=void 0,s={unversionedId:"quick_start/data_ingestion/file_pulsar_clickhouse_example",id:"version-2.2.0/quick_start/data_ingestion/file_pulsar_clickhouse_example",title:"Pulsar Example",description:"Here we use an example to introduce how to create File -> Pulsar -> ClickHouse data ingestion.",source:"@site/versioned_docs/version-2.2.0/quick_start/data_ingestion/file_pulsar_clickhouse_example.md",sourceDirName:"quick_start/data_ingestion",slug:"/quick_start/data_ingestion/file_pulsar_clickhouse_example",permalink:"/docs/quick_start/data_ingestion/file_pulsar_clickhouse_example",draft:!1,editUrl:"https://github.com/apache/inlong-website/edit/master/versioned_docs/version-2.2.0/quick_start/data_ingestion/file_pulsar_clickhouse_example.md",tags:[],version:"2.2.0",sidebarPosition:2,frontMatter:{title:"Pulsar Example",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Format",permalink:"/docs/design_and_concept/the_format_in_inlong"},next:{title:"Kafka Example",permalink:"/docs/quick_start/data_ingestion/mysql_kafka_clickhouse_example"}},o={},c=[{value:"Deployment",id:"deployment",level:2},{value:"Install InLong",id:"install-inlong",level:3},{value:"Install ClickHouse",id:"install-clickhouse",level:3},{value:"Cluster Initialize",id:"cluster-initialize",level:2},{value:"Create Cluster Tag",id:"create-cluster-tag",level:3},{value:"Register Pulsar Cluster",id:"register-pulsar-cluster",level:3},{value:"Register Clickhouse DataNodes",id:"register-clickhouse-datanodes",level:3},{value:"Create Task",id:"create-task",level:2},{value:"Create Data Streams Group",id:"create-data-streams-group",level:3},{value:"Create Data Stream",id:"create-data-stream",level:3},{value:"Create Data Source",id:"create-data-source",level:3},{value:"Create Data Sink",id:"create-data-sink",level:3},{value:"Approve Data Stream",id:"approve-data-stream",level:3},{value:"Test Data",id:"test-data",level:2},{value:"Enter Agent Container",id:"enter-agent-container",level:3},{value:"Send Data",id:"send-data",level:3},{value:"Verify Data",id:"verify-data",level:3},{value:"Questions",id:"questions",level:2},{value:"&quot;specify container image platform&quot; when start Docker Compose",id:"specify-container-image-platform-when-start-docker-compose",level:3},{value:"Task Configuration Failed",id:"task-configuration-failed",level:3}],d={toc:c},u="wrapper";function p(e){let{components:a,...l}=e;return(0,n.yg)(u,(0,r.A)({},d,l,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Here we use an example to introduce how to create ",(0,n.yg)("inlineCode",{parentName:"p"},"File -> Pulsar -> ClickHouse")," data ingestion."),(0,n.yg)("h2",{id:"deployment"},"Deployment"),(0,n.yg)("h3",{id:"install-inlong"},"Install InLong"),(0,n.yg)("p",null,"Before we begin, we need to install InLong. Here we provide two ways:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/deployment/docker"},"Docker Deployment")," (Recommended)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/deployment/bare_metal"},"Bare Metal Deployment"))),(0,n.yg)("h3",{id:"install-clickhouse"},"Install ClickHouse"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"docker run -d --rm --net=host --name clickhouse -e CLICKHOUSE_USER=admin -e CLICKHOUSE_PASSWORD=inlong -e CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1 clickhouse/clickhouse-server:22.8\n")),(0,n.yg)("h2",{id:"cluster-initialize"},"Cluster Initialize"),(0,n.yg)("p",null,"When all containers are successfully started, you can access the InLong dashboard address http://localhost, and use the following default account to log in."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-properties"},"User: admin\nPassword: inlong\n")),(0,n.yg)("h3",{id:"create-cluster-tag"},"Create Cluster Tag"),(0,n.yg)("p",null,"Click ","[Clusters]"," -> ","[ClusterTags]"," -> ","[Create]"," on the page to specify the cluster label name and person in charge.\n",(0,n.yg)("img",{alt:"Create Cluster label",src:t(64065).A,width:"515",height:"328"})),(0,n.yg)("admonition",{type:"caution"},(0,n.yg)("p",{parentName:"admonition"},"Since each component reports the ClusterTags as ",(0,n.yg)("inlineCode",{parentName:"p"},"default_cluster")," by default, do not use other names.")),(0,n.yg)("h3",{id:"register-pulsar-cluster"},"Register Pulsar Cluster"),(0,n.yg)("p",null,"Click ","[Clusters]"," -> ","[ClusterTags]"," -> ","[Create]"," on the page to register Pulsar Cluster.\n",(0,n.yg)("img",{alt:"pulsar cluster",src:t(52614).A,width:"646",height:"800"})),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"The ClusterTags selects the newly created ",(0,n.yg)("inlineCode",{parentName:"p"},"default_cluster"),", the Pulsar cluster deployed by docker:"),(0,n.yg)("p",{parentName:"admonition"},"Service URL is ",(0,n.yg)("inlineCode",{parentName:"p"},"pulsar://pulsar:6650"),", Admin URL is ",(0,n.yg)("inlineCode",{parentName:"p"},"http://pulsar:8080"),".")),(0,n.yg)("h3",{id:"register-clickhouse-datanodes"},"Register Clickhouse DataNodes"),(0,n.yg)("p",null,"Click ","[DataNodes]"," -> ","[Create]"," on the page to register ClickHouse DataNodes.\n",(0,n.yg)("img",{alt:"Create kafka cluster",src:t(21229).A,width:"891",height:"655"})),(0,n.yg)("h2",{id:"create-task"},"Create Task"),(0,n.yg)("h3",{id:"create-data-streams-group"},"Create Data Streams Group"),(0,n.yg)("p",null,"Click ","[Ingestion]"," -> ","[Create]",", inpit ID and select Pulsar Type.\n",(0,n.yg)("img",{alt:"Create datastream",src:t(22134).A,width:"3354",height:"1794"})),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"If you want to use Kafka, you need to modify the MQ_TYPE in docker-compose.yml")),(0,n.yg)("h3",{id:"create-data-stream"},"Create Data Stream"),(0,n.yg)("p",null,"Click ","[Next]"," -> ","[Create]",", config data stream.\n",(0,n.yg)("img",{alt:"Create datastream",src:t(42767).A,width:"1236",height:"909"})),(0,n.yg)("h3",{id:"create-data-source"},"Create Data Source"),(0,n.yg)("p",null,"Click ","[Sources create]"," -> ","[File]",", config data source informations.\n",(0,n.yg)("img",{alt:"Create datastream",src:t(44432).A,width:"961",height:"565"})),(0,n.yg)("h3",{id:"create-data-sink"},"Create Data Sink"),(0,n.yg)("p",null,"Click ","[Sinks create]"," -> ","[ClickHouse]",", input Name, DbName, TableName and select created ck DataNode and so on, then click ","[save]",".\n",(0,n.yg)("img",{alt:"Create data object",src:t(72966).A,width:"1492",height:"1121"})),(0,n.yg)("h3",{id:"approve-data-stream"},"Approve Data Stream"),(0,n.yg)("p",null,"Click ","[Approval]"," -> ","[MyApproval]"," -> ","[Detail]"," -> ","[Select Cluster tag]"," -> ","[Ok]",".\n",(0,n.yg)("img",{alt:"clickhouse",src:t(82886).A,width:"3322",height:"714"})),(0,n.yg)("p",null,"Back to ","[Ingestion]"," page, wait for ","[configuration success]",".\n",(0,n.yg)("img",{alt:"clickhouse",src:t(22550).A,width:"3296",height:"782"})),(0,n.yg)("h2",{id:"test-data"},"Test Data"),(0,n.yg)("h3",{id:"enter-agent-container"},"Enter Agent Container"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"docker exec -it agent /bin/bash\n")),(0,n.yg)("h3",{id:"send-data"},"Send Data"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-shell"},'# collect file /data/collect-data/test.log data source configuration path and total of 10000 data packets are sent.\nfor i in {1..10000};do echo "name_$i | $i" >> /data/collect-data/test.log;done\n')),(0,n.yg)("h3",{id:"verify-data"},"Verify Data"),(0,n.yg)("p",null,"Check data in ","[Audit]"," page.\n",(0,n.yg)("img",{alt:"clickhouse",src:t(29122).A,width:"1925",height:"874"})),(0,n.yg)("p",null,"Then enter ClickHouse container, check data in table.\n",(0,n.yg)("img",{alt:"clickhouse",src:t(38867).A,width:"723",height:"765"})),(0,n.yg)("h2",{id:"questions"},"Questions"),(0,n.yg)("h3",{id:"specify-container-image-platform-when-start-docker-compose"},'"specify container image platform" when start Docker Compose'),(0,n.yg)("p",null,'The API is incompatible, you can delete platform: "linux/x86_64" in docker-compose.'),(0,n.yg)("h3",{id:"task-configuration-failed"},"Task Configuration Failed"),(0,n.yg)("p",null,"Generally, the MQ or Flink group configuration is incorrect. You can view the error information on the page, or enter the Manager container to view detailed logs."))}p.isMDXComponent=!0},64065:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/create_cluster_label-6a90b8b65f0e4d3259bbed710a5d50ef.png"},52614:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/create_pulsar_cluster-57792270c123117d0c57f3bc008bcd40.png"},21229:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/datanode-4c23f8f8c270eda09263d01b6e824614.png"},82886:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/pulsar_approval-225aaff76e68b4d041c60364f44cae16.png"},22550:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/pulsar_approve_result-39eb149769cb427225e7ed0c16896c3c.png"},29122:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/pulsar_audit-e879a11e07708842eaf5da6edf1622da.png"},22134:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/pulsar_group-064402e790ec639c7dbe339251e706e7.png"},72966:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/pulsar_sink-3502c5e188adee0d87b74160b4d71d8f.png"},44432:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/pulsar_source-c09231119dc345a1694aa3def63375f0.png"},42767:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/pulsar_stream-a30cfbecab0c5c78d35d47393085ec21.png"},38867:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/pulsar_table-859be55dbabcda83e11f652ad5e954ba.png"}}]);