"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[34606],{15680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>u});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),d=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=d(e.components);return r.createElement(p.Provider,{value:n},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),g=d(t),m=a,u=g["".concat(p,".").concat(m)]||g[m]||c[m]||o;return t?r.createElement(u,i(i({ref:n},s),{},{components:t})):r.createElement(u,i({ref:n},s))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[g]="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},25519:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=t(58168),a=(t(96540),t(15680));const o={title:"Manager Custom Data Node",sidebar_position:3},i=void 0,l={unversionedId:"development/extension_manager/inlong_manger_data_node_extension",id:"version-2.1.0/development/extension_manager/inlong_manger_data_node_extension",title:"Manager Custom Data Node",description:"Overview",source:"@site/versioned_docs/version-2.1.0/development/extension_manager/inlong_manger_data_node_extension.md",sourceDirName:"development/extension_manager",slug:"/development/extension_manager/inlong_manger_data_node_extension",permalink:"/docs/2.1.0/development/extension_manager/inlong_manger_data_node_extension",draft:!1,editUrl:"https://github.com/apache/inlong-website/edit/master/versioned_docs/version-2.1.0/development/extension_manager/inlong_manger_data_node_extension.md",tags:[],version:"2.1.0",sidebarPosition:3,frontMatter:{title:"Manager Custom Data Node",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Manager Custom Plugin",permalink:"/docs/2.1.0/development/extension_manager/inlong_manager_plugin"},next:{title:"Sort Extension Connector",permalink:"/docs/2.1.0/development/extension_sort/extension_connector"}},p={},d=[{value:"Overview",id:"overview",level:2},{value:"Extend Extract Node",id:"extend-extract-node",level:2},{value:"Extend Load Node",id:"extend-load-node",level:2}],s={toc:d},g="wrapper";function c(e){let{components:n,...t}=e;return(0,a.yg)(g,(0,r.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"overview"},"Overview"),(0,a.yg)("p",null,"Inlong is aimed at create dataflow between different data sources, now Inlong has support several universal data sources such as ",(0,a.yg)("strong",{parentName:"p"},"MySQL"),", ",(0,a.yg)("strong",{parentName:"p"},"Apache Kafka"),", ",(0,a.yg)("strong",{parentName:"p"},"ClickHouse")," on Input/Output respectively,\nYou can refer to ",(0,a.yg)("a",{parentName:"p",href:"/docs/2.1.0/data_node/extract_node/overview"},"Data Node")," for specific information. Each Data Node of InLong supports unified management through Manager to simplify the use of users.\nThis article describes how to extend a new data node through the Manager to provide services."),(0,a.yg)("h2",{id:"extend-extract-node"},"Extend Extract Node"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Develop extract node plugin in sort, refer to ",(0,a.yg)("a",{parentName:"li",href:"/docs/2.1.0/development/extension_sort/extension_connector"},"Sort Plugin")),(0,a.yg)("li",{parentName:"ul"},"Add ",(0,a.yg)("strong",{parentName:"li"},"TaskType")," in ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.common.enums.TaskTypeEnum")),(0,a.yg)("li",{parentName:"ul"},"Add ",(0,a.yg)("strong",{parentName:"li"},"SourceType")," in ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.common.consts.SourceType")),(0,a.yg)("li",{parentName:"ul"},"Create new package under package path: ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.common.pojo.source"),", develop every entity class needed."),(0,a.yg)("li",{parentName:"ul"},"Create Operation class for new data source under package path: ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.service.source"),"."),(0,a.yg)("li",{parentName:"ul"},"Transfer data source to ",(0,a.yg)("strong",{parentName:"li"},"ExtractNode")," supported in ",(0,a.yg)("strong",{parentName:"li"},"Sort"),", create the implementation class Provider for the ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.provider.ExtractNodeProvider")," interface under the ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.provider")," path, and register it with the ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.ExtractNodeProviderFactory"))),(0,a.yg)("h2",{id:"extend-load-node"},"Extend Load Node"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Develop load node plugin in sort, refer to ",(0,a.yg)("a",{parentName:"li",href:"/docs/2.1.0/development/extension_sort/extension_connector"},"Sort Plugin")),(0,a.yg)("li",{parentName:"ul"},"Add ",(0,a.yg)("strong",{parentName:"li"},"SinkType")," in ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.common.consts.SinkType")),(0,a.yg)("li",{parentName:"ul"},"Create new package under package path: ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.common.pojo.sink"),", develop every entity class needed."),(0,a.yg)("li",{parentName:"ul"},"Create Operation class for new data source under package path: ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.service.sink"),"."),(0,a.yg)("li",{parentName:"ul"},"Transfer data sink to ",(0,a.yg)("strong",{parentName:"li"},"LoadNode")," supported in ",(0,a.yg)("strong",{parentName:"li"},"Sort"),", create the implementation class Provider for the ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.provider.LoadNodeProvider")," interface under the ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.provider")," path, and register it with the ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.LoadNodeProviderFactory"))))}c.isMDXComponent=!0}}]);