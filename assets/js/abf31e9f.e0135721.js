"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[63616],{15680:(e,t,a)=>{a.d(t,{xA:()=>g,yg:()=>c});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),u=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},g=function(e){var t=u(e.components);return n.createElement(d.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),s=u(a),m=r,c=s["".concat(d,".").concat(m)]||s[m]||p[m]||i;return a?n.createElement(c,l(l({ref:t},g),{},{components:a})):n.createElement(c,l({ref:t},g))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[s]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},83325:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var n=a(58168),r=(a(96540),a(15680));const i={title:"Overview",sidebar_position:1},l=void 0,o={unversionedId:"modules/audit/overview",id:"modules/audit/overview",title:"Overview",description:"InLong audit is a subsystem independent of InLong, which performs real-time audit and reconciliation on the incoming and",source:"@site/docs/modules/audit/overview.md",sourceDirName:"modules/audit",slug:"/modules/audit/overview",permalink:"/docs/next/modules/audit/overview",draft:!1,editUrl:"https://github.com/apache/inlong-website/edit/master/docs/modules/audit/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Overview",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Pulsar2kafka Example",permalink:"/docs/next/modules/sort-standalone/pulsar2kafka"},next:{title:"Deployment",permalink:"/docs/next/modules/audit/deployment"}},d={},u=[{value:"Architecture",id:"architecture",level:2},{value:"Module",id:"module",level:2},{value:"Audit Dimension",id:"audit-dimension",level:2},{value:"Audit ID",id:"audit-id",level:2},{value:"Audit data storage",id:"audit-data-storage",level:2}],g={toc:u},s="wrapper";function p(e){let{components:t,...i}=e;return(0,r.yg)(s,(0,n.A)({},g,i,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"InLong audit is a subsystem independent of InLong, which performs real-time audit and reconciliation on the incoming and\noutgoing traffic of the Agent, DataProxy, and Sort modules of the InLong system.\nThere are three granularities for reconciliation: minutes, hours, and days."),(0,r.yg)("p",null,"The audit reconciliation is based on the log reporting time, and each service participating in the audit will conduct\nreal-time reconciliation according to the same log time. Through audit reconciliation, we can clearly understand InLong\nThe transmission status of each module, and whether the data stream is lost or repeated"),(0,r.yg)("h2",{id:"architecture"},"Architecture"),(0,r.yg)("p",null,(0,r.yg)("img",{src:a(98703).A,width:"1130",height:"352"})),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"The audit SDK is nested in the service that needs to be audited, audits the service, and sends the audit result to\nthe audit access layer"),(0,r.yg)("li",{parentName:"ul"},"The audit proxy writes audit data to MQ (Pulsar, Kafka or TubeMQ)"),(0,r.yg)("li",{parentName:"ul"},"The distribution service consumes the audit data of MQ, and writes the audit data to MySQL or StarRocks."),(0,r.yg)("li",{parentName:"ul"},"The interface layer encapsulates the data of MySQL or StarRocks."),(0,r.yg)("li",{parentName:"ul"},"Application scenarios mainly include report display, audit reconciliation, etc."),(0,r.yg)("li",{parentName:"ul"},"Support audit and reconciliation of data supplementary recording scenarios."),(0,r.yg)("li",{parentName:"ul"},"Support audit reconciliation in Flink checkpoint scenarios.")),(0,r.yg)("h2",{id:"module"},"Module"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Modules"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"audit-sdk"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Audit hidden points are reported. Each module uses the SDK to report audit data")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"audit-proxy"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Audit proxy layer, receives data reported by SDK and forwards it to MQ (pulsar/kafka/tubeMQ)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"audit-store"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Audit storage layer, supporting common JDBC protocol")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"audit-service"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Audit service layer, providing aggregation, cache, OpenAPI and other capabilities")))),(0,r.yg)("h2",{id:"audit-dimension"},"Audit Dimension"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null}),(0,r.yg)("th",{parentName:"tr",align:null}),(0,r.yg)("th",{parentName:"tr",align:null}),(0,r.yg)("th",{parentName:"tr",align:null}),(0,r.yg)("th",{parentName:"tr",align:null}),(0,r.yg)("th",{parentName:"tr",align:null}),(0,r.yg)("th",{parentName:"tr",align:null}),(0,r.yg)("th",{parentName:"tr",align:null}),(0,r.yg)("th",{parentName:"tr",align:null}),(0,r.yg)("th",{parentName:"tr",align:null}))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Machine ip"),(0,r.yg)("td",{parentName:"tr",align:null},"Container ID"),(0,r.yg)("td",{parentName:"tr",align:null},"Thread ID"),(0,r.yg)("td",{parentName:"tr",align:null},"Log time (minutes)"),(0,r.yg)("td",{parentName:"tr",align:null},"Audit ID"),(0,r.yg)("td",{parentName:"tr",align:null},"inlong_group_id"),(0,r.yg)("td",{parentName:"tr",align:null},"inlong_stream_id"),(0,r.yg)("td",{parentName:"tr",align:null},"Number of records"),(0,r.yg)("td",{parentName:"tr",align:null},"Size"),(0,r.yg)("td",{parentName:"tr",align:null},"Transmission delay (ms)")))),(0,r.yg)("h2",{id:"audit-id"},"Audit ID"),(0,r.yg)("p",null,"The receiving and sending of each module are respectively an independent audit item ID"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Inlong Service Module"),(0,r.yg)("th",{parentName:"tr",align:null},"Audit ID"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Inlong API Received Successfully"),(0,r.yg)("td",{parentName:"tr",align:null},"1")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Inlong API Send Successfully"),(0,r.yg)("td",{parentName:"tr",align:null},"2")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Inlong Agent Received Successfully"),(0,r.yg)("td",{parentName:"tr",align:null},"3")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Inlong Agent Send Successfully"),(0,r.yg)("td",{parentName:"tr",align:null},"4")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Inlong DataProxy Received Successfully"),(0,r.yg)("td",{parentName:"tr",align:null},"5")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Inlong DataProxy Send Successfully"),(0,r.yg)("td",{parentName:"tr",align:null},"6")))),(0,r.yg)("h2",{id:"audit-data-storage"},"Audit data storage"),(0,r.yg)("p",null,"Audit Store supports writing operations to all storage components compatible with the JDBC protocol. Therefore, when\nselecting a storage component compatible with the JDBC protocol, it is only necessary to ensure that it meets the\nfollowing schema:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-mysql"},"CREATE TABLE IF NOT EXISTS `audit_data`\n(\n    `id`               int(32)      NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT 'Incremental primary key',\n    `ip`               varchar(32)  NOT NULL DEFAULT '' COMMENT 'Client IP',\n    `docker_id`        varchar(100) NOT NULL DEFAULT '' COMMENT 'Client docker id',\n    `thread_id`        varchar(50)  NOT NULL DEFAULT '' COMMENT 'Client thread id',\n    `sdk_ts`           TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'SDK timestamp',\n    `packet_id`        BIGINT       NOT NULL DEFAULT '0' COMMENT 'Packet id',\n    `log_ts`           TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Log timestamp',\n    `inlong_group_id`  varchar(100) NOT NULL DEFAULT '' COMMENT 'The target inlong group id',\n    `inlong_stream_id` varchar(100) NOT NULL DEFAULT '' COMMENT 'The target inlong stream id',\n    `audit_id`         varchar(100) NOT NULL DEFAULT '' COMMENT 'Audit id',\n    `audit_tag`        varchar(100)          DEFAULT '' COMMENT 'Audit tag',\n    `audit_version`    BIGINT                DEFAULT -1 COMMENT 'Audit version',\n    `count`            BIGINT       NOT NULL DEFAULT '0' COMMENT 'Message count',\n    `size`             BIGINT       NOT NULL DEFAULT '0' COMMENT 'Message size',\n    `delay`            BIGINT       NOT NULL DEFAULT '0' COMMENT 'Message delay count',\n    `update_time`      timestamp    NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Update time',\n    INDEX group_stream_audit_id (`inlong_group_id`, `inlong_stream_id`, `audit_id`, `log_ts`)\n) ENGINE = InnoDB\n  DEFAULT CHARSET = UTF8 COMMENT ='InLong audit data table';\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"ip: Represents the client's IP address;"),(0,r.yg)("li",{parentName:"ul"},"docker_id: String of length 100 that represents the client's Docker ID;"),(0,r.yg)("li",{parentName:"ul"},"thread_id: String of length 50 that represents the client's thread ID;"),(0,r.yg)("li",{parentName:"ul"},"sdk_ts: TIMESTAMP type that represents the SDK timestamp, with a default value of the current timestamp;"),(0,r.yg)("li",{parentName:"ul"},"packet_id: 64-bit integer that represents the ID of the data packet;"),(0,r.yg)("li",{parentName:"ul"},"log_ts: TIMESTAMP type that represents the timestamp of the log, with a default value of the current timestamp;"),(0,r.yg)("li",{parentName:"ul"},"inlong_group_id: String of length 100 that represents the ID of the target Inlong group;"),(0,r.yg)("li",{parentName:"ul"},"inlong_stream_id: String of length 100 that represents the ID of the target Inlong stream;"),(0,r.yg)("li",{parentName:"ul"},"audit_id: String of length 100 that represents the audit ID;"),(0,r.yg)("li",{parentName:"ul"},"audit_tag: String of length 100 that represents the audit tag, with a default value of an empty string;"),(0,r.yg)("li",{parentName:"ul"},"audit_version: 64-bit integer that represents the audit version, with a default value of -1;"),(0,r.yg)("li",{parentName:"ul"},"count: 64-bit integer that represents the message count, with a default value of 0;"),(0,r.yg)("li",{parentName:"ul"},"size: 64-bit integer that represents the message size, with a default value of 0;"),(0,r.yg)("li",{parentName:"ul"},"delay: 64-bit integer that represents the message delay count, with a default value of 0;"),(0,r.yg)("li",{parentName:"ul"},"update_time: TIMESTAMP type that represents the update time, with a default value of the current timestamp.")))}p.isMDXComponent=!0},98703:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/audit_architecture-22e87871be9417f200d28eac4f208041.png"}}]);