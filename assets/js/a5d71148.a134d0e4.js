"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[18472],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>m});var o=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=c(t),d=r,m=f["".concat(l,".").concat(d)]||f[d]||u[d]||a;return t?o.createElement(m,i(i({ref:n},p),{},{components:t})):o.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[f]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},61262:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=t(58168),r=(t(96540),t(15680));const a={title:"Pulsar To kafka Example",sidebar_position:5},i=void 0,s={unversionedId:"modules/sort-standalone/pulsar2kafka",id:"modules/sort-standalone/pulsar2kafka",title:"Pulsar To kafka Example",description:"Prepare To Get Module Archive",source:"@site/docs/modules/sort-standalone/pulsar2kafka.md",sourceDirName:"modules/sort-standalone",slug:"/modules/sort-standalone/pulsar2kafka",permalink:"/docs/next/modules/sort-standalone/pulsar2kafka",draft:!1,editUrl:"https://github.com/apache/inlong-website/edit/master/docs/modules/sort-standalone/pulsar2kafka.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Pulsar To kafka Example",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Pulsar To Elasticsearch Example",permalink:"/docs/next/modules/sort-standalone/pulsar2es"},next:{title:"Overview",permalink:"/docs/next/modules/audit/overview"}},l={},c=[{value:"Prepare To Get Module Archive",id:"prepare-to-get-module-archive",level:2},{value:"Prepare To Modify Configuration File",id:"prepare-to-modify-configuration-file",level:2},{value:"Example: conf/common.properties",id:"example-confcommonproperties",level:3},{value:"Example: conf/SortClusterConfig.conf",id:"example-confsortclusterconfigconf",level:3},{value:"Example: conf/sid_kafka_v3.conf",id:"example-confsid_kafka_v3conf",level:3}],p={toc:c},f="wrapper";function u(e){let{components:n,...t}=e;return(0,r.yg)(f,(0,o.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"prepare-to-get-module-archive"},"Prepare To Get Module Archive"),(0,r.yg)("p",null,"Module archive is in the directory:",(0,r.yg)("inlineCode",{parentName:"p"},"inlong-sort-standalone/sort-standalone-dist/target/"),", the archive file is ",(0,r.yg)("inlineCode",{parentName:"p"},"apache-inlong-sort-standalone-${project.version}-bin.tar.gz"),"."),(0,r.yg)("h2",{id:"prepare-to-modify-configuration-file"},"Prepare To Modify Configuration File"),(0,r.yg)("p",null,"At first, decompress the archive file, copy three files in the directory ",(0,r.yg)("inlineCode",{parentName:"p"},"conf/kafka/")," to the directory ",(0,r.yg)("inlineCode",{parentName:"p"},"conf/"),"."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"conf/common.properties, common configuration of all components."),(0,r.yg)("li",{parentName:"ul"},"conf/SortClusterConfig.conf, sink configuration of all sort tasks."),(0,r.yg)("li",{parentName:"ul"},"conf/sid_kafka_v3.conf, data source configuration example of a sort task, the file name is same with sort task name in SortClusterConfig.conf.")),(0,r.yg)("h3",{id:"example-confcommonproperties"},"Example: conf/common.properties"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-properties"},"# inlong-sort-standalone cluster id\nclusterId=kafkav3-sz-sz1\n# Current node ID\nnodeId=nodeId\n# Domain name of metric \nmetricDomains=Sort\n# Class name list of metric listener, separated by space\nmetricDomains.Sort.domainListeners=org.apache.inlong.sort.standalone.metrics.prometheus.PrometheusMetricListener\n# Interval snapshoting metric data(millisecond)\nmetricDomains.Sort.snapshotInterval=60000\n# Channel class name \nsortChannel.type=org.apache.inlong.sort.standalone.channel.BufferQueueChannel\n# Sink class name. Different distribution types use different Sink classes \nsortSink.type=org.apache.inlong.sort.standalone.sink.kafka.KafkaSink\n# Source class name \nsortSource.type=org.apache.inlong.sort.standalone.source.sortsdk.SortSdkSource\n# The distribution cluster configuration loading class name\nsortClusterConfig.type=file\n# When the cluster configuration data is loaded from a file, the name of the configuration file in the classpath\nsortClusterConfig.file=SortClusterConfig.conf\n# There are three ways to load the Sort task configuration data: [file, Manager, custom class]\nsortSourceConfig.QueryConsumeConfigType=file\n")),(0,r.yg)("h3",{id:"example-confsortclusterconfigconf"},"Example: conf/SortClusterConfig.conf"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "clusterName": "kafkav3-gz-gz1",\n  "sortTasks": [\n    {\n      "name": "sid_kafka_v3",\n      "type": "KAFKA",\n      "idParams": [\n        {\n          "topic": "the kafka topic report to",\n          "inlongGroupId": "0fc00000046",\n          "inlongStreamId": "1"\n        }\n      ],\n      "sinkParams": {\n        "client.id": "client_id",\n        "bootstrap.servers": "127.0.0.1:10005"\n      }\n    }\n  ]\n}\n')),(0,r.yg)("h3",{id:"example-confsid_kafka_v3conf"},"Example: conf/sid_kafka_v3.conf"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "sortClusterName": "kafkav3-gz-gz1",\n  "sortTaskId": "sid_kafka_v3",\n  "cacheZones": {\n    "pc_inlong6th_sz1": {\n      "zoneName": "${PULSAR_CLUSTER_NAME}",\n      "serviceUrl": "http://${PULSAR_IP}:${PULSAR_PORT}",\n      "authentication": "${PULSAR_AUTH}",\n      "topics": [\n        {\n          "topic": "${TENANT/NAMESPACE/TOPIC}",\n          "partitionCnt": 10,\n          "topicProperties": {}\n        }\n      ],\n      "cacheZoneProperties": {},\n      "zoneType": "pulsar"\n    }\n  }\n}\n')))}u.isMDXComponent=!0}}]);