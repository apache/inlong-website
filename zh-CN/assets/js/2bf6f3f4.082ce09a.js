"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[20132],{15680:(n,e,t)=>{t.d(e,{xA:()=>s,yg:()=>m});var a=t(96540);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,a,o=function(n,e){if(null==n)return{};var t,a,o={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var p=a.createContext({}),g=function(n){var e=a.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},s=function(n){var e=g(n.components);return a.createElement(p.Provider,{value:e},n.children)},d="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(n,e){var t=n.components,o=n.mdxType,r=n.originalType,p=n.parentName,s=i(n,["components","mdxType","originalType","parentName"]),d=g(t),u=o,m=d["".concat(p,".").concat(u)]||d[u]||c[u]||r;return t?a.createElement(m,l(l({ref:e},s),{},{components:t})):a.createElement(m,l({ref:e},s))}));function m(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var r=t.length,l=new Array(r);l[0]=u;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=n,i[d]="string"==typeof n?n:o,l[1]=i;for(var g=2;g<r;g++)l[g]=t[g];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8285:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>g});var a=t(58168),o=(t(96540),t(15680));const r={title:"Sort \u6269\u5c55 Connector",sidebar_position:1},l="Sort \u6269\u5c55 Connector",i={unversionedId:"development/extension_sort/extension_connector",id:"development/extension_sort/extension_connector",title:"Sort \u6269\u5c55 Connector",description:"\u603b\u89c8",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/development/extension_sort/extension_connector.md",sourceDirName:"development/extension_sort",slug:"/development/extension_sort/extension_connector",permalink:"/zh-CN/docs/next/development/extension_sort/extension_connector",draft:!1,editUrl:"https://github.com/apache/inlong-website/edit/master/docs/development/extension_sort/extension_connector.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Sort \u6269\u5c55 Connector",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Manager \u81ea\u5b9a\u4e49\u6570\u636e\u8282\u70b9",permalink:"/zh-CN/docs/next/development/extension_manager/inlong_manger_data_node_extension"},next:{title:"InLong \u5206\u62e3\u6570\u636e\u7ec4\u7ec7\u53ca\u534f\u8bae\u89e3\u6790",permalink:"/zh-CN/docs/next/development/extension_sort/inlong_sort_data_organization_and_binary_protocol"}},p={},g=[{value:"\u603b\u89c8",id:"\u603b\u89c8",level:2},{value:"\u6269\u5c55 Extract &amp; Load Node",id:"\u6269\u5c55-extract--load-node",level:2},{value:"\u589e\u52a0 Extract &amp; Load Node \u5b9a\u4e49",id:"\u589e\u52a0-extract--load-node-\u5b9a\u4e49",level:3},{value:"\u6269\u5c55 ExtractNode",id:"\u6269\u5c55-extractnode",level:3},{value:"\u6269\u5c55 Load Node",id:"\u6269\u5c55-load-node",level:3},{value:"\u96c6\u6210\u5230 Entrance",id:"\u96c6\u6210\u5230-entrance",level:3},{value:"InlongMetric",id:"inlongmetric",level:2},{value:"Metadata",id:"metadata",level:2},{value:"\u6269\u5c55 Apache Flink Connector",id:"\u6269\u5c55-apache-flink-connector",level:2},{value:'<span id="jump1">\u5982\u4f55\u96c6\u6210 Inlong Audit \u5230\u81ea\u5b9a\u4e49 Connector</span>',id:"\u5982\u4f55\u96c6\u6210-inlong-audit-\u5230\u81ea\u5b9a\u4e49-connector",level:2}],s={toc:g},d="wrapper";function c(n){let{components:e,...r}=n;return(0,o.yg)(d,(0,a.A)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"sort-\u6269\u5c55-connector"},"Sort \u6269\u5c55 Connector"),(0,o.yg)("h2",{id:"\u603b\u89c8"},"\u603b\u89c8"),(0,o.yg)("p",null,"InLong Sort \u662f\u4e00\u4e2a\u57fa\u4e8e Apache Flink SQL \u7684 ETL \u670d\u52a1\u3002Flink SQL \u5f3a\u5927\u7684\u8868\u8fbe\u80fd\u529b\u5e26\u6765\u7684\u9ad8\u53ef\u6269\u5c55\u6027\u3001\u7075\u6d3b\u6027\uff0c\u57fa\u672c\u4e0a Flink SQL \u652f\u6301\u7684\u8bed\u610f\uff0cInLong Sort \u90fd\u652f\u6301\u3002\n\u5f53 Flink SQL \u5185\u7f6e\u7684\u51fd\u6570\u4e0d\u6ee1\u8db3\u9700\u6c42\u65f6\uff0c\u8fd8\u53ef\u901a\u8fc7 UDF \u6765\u6269\u5c55\u3002\u8fd9\u5bf9\u4e8e\u66fe\u7ecf\u4f7f\u7528\u8fc7 SQL \u5c24\u5176\u662f Flink SQL \u7684\u5f00\u53d1\u8005\u975e\u5e38\u53cb\u597d\u3002"),(0,o.yg)("p",null,"\u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u5728 InLong Sort \u4e2d\u6269\u5c55\u4e00\u4e2a\u65b0\u7684 source\uff08\u5728 InLong \u4e2d\u62bd\u8c61\u4e3a Extract Node\uff09\u6216\u4e00\u4e2a\u65b0\u7684 sink\uff08\u5728InLong\u4e2d\u62bd\u8c61\u4e3a Load Node \uff09\u3002\nInLong Sort \u67b6\u6784\u7684 UML \u5bf9\u8c61\u5173\u7cfb\u56fe\u5982\u4e0b\uff1a"),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"sort_uml",src:t(50557).A,width:"2576",height:"869"})),(0,o.yg)("p",null,"\u5176\u4e2d\u5404\u4e2a\u7ec4\u4ef6\u7684\u6982\u5ff5\u4e3a\uff1a"),(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:null},(0,o.yg)("strong",{parentName:"th"},"\u540d\u79f0")),(0,o.yg)("th",{parentName:"tr",align:null},(0,o.yg)("strong",{parentName:"th"},"\u63cf\u8ff0")))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"Group"),(0,o.yg)("td",{parentName:"tr",align:null},"\u6570\u636e\u6d41\u7ec4\uff0c\u5305\u542b\u591a\u4e2a\u6570\u636e\u6d41\uff0c\u4e00\u4e2a Group \u4ee3\u8868\u4e00\u4e2a\u6570\u636e\u63a5\u5165")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"Stream"),(0,o.yg)("td",{parentName:"tr",align:null},"\u6570\u636e\u6d41\uff0c\u4e00\u4e2a\u6570\u636e\u6d41\u6709\u5177\u4f53\u7684\u6d41\u5411")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"GroupInfo"),(0,o.yg)("td",{parentName:"tr",align:null},"Sort \u4e2d\u5bf9\u6570\u636e\u6d41\u5411\u7684\u5c01\u88c5\uff0c\u4e00\u4e2a GroupInfo \u53ef\u5305\u542b\u591a\u4e2a DataFlowInfo")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"StreamInfo"),(0,o.yg)("td",{parentName:"tr",align:null},"Sort \u4e2d\u6570\u636e\u6d41\u5411\u7684\u62bd\u8c61\uff0c\u5305\u542b\u8be5\u6570\u636e\u6d41\u7684\u5404\u79cd\u6765\u6e90\u3001\u8f6c\u6362\u3001\u53bb\u5411\u7b49")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"Node"),(0,o.yg)("td",{parentName:"tr",align:null},"\u6570\u636e\u540c\u6b65\u4e2d\u6570\u636e\u6e90\u3001\u6570\u636e\u8f6c\u6362\u3001\u6570\u636e\u53bb\u5411\u7684\u62bd\u8c61")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"ExtractNode"),(0,o.yg)("td",{parentName:"tr",align:null},"\u6570\u636e\u540c\u6b65\u7684\u6765\u6e90\u7aef\u62bd\u8c61")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"TransformNode"),(0,o.yg)("td",{parentName:"tr",align:null},"\u6570\u636e\u540c\u6b65\u7684\u8f6c\u6362\u8fc7\u7a0b\u62bd\u8c61")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"LoadNode"),(0,o.yg)("td",{parentName:"tr",align:null},"\u6570\u636e\u540c\u6b65\u7684\u53bb\u5411\u7aef\u62bd\u8c61")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"NodeRelationShip"),(0,o.yg)("td",{parentName:"tr",align:null},"\u6570\u636e\u540c\u6b65\u4e2d\u5404\u4e2a\u8282\u70b9\u5173\u7cfb\u62bd\u8c61")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"FieldRelationShip"),(0,o.yg)("td",{parentName:"tr",align:null},"\u6570\u636e\u540c\u6b65\u4e2d\u4e0a\u4e0b\u6e38\u8282\u70b9\u5b57\u6bb5\u95f4\u5173\u7cfb\u7684\u62bd\u8c61")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"FieldInfo"),(0,o.yg)("td",{parentName:"tr",align:null},"\u8282\u70b9\u5b57\u6bb5")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"MetaFieldInfo"),(0,o.yg)("td",{parentName:"tr",align:null},"\u8282\u70b9 Meta \u5b57\u6bb5")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"Function"),(0,o.yg)("td",{parentName:"tr",align:null},"\u8f6c\u6362\u51fd\u6570\u7684\u62bd\u8c61")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"FunctionParam"),(0,o.yg)("td",{parentName:"tr",align:null},"\u51fd\u6570\u7684\u5165\u53c2\u62bd\u8c61")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"ConstantParam"),(0,o.yg)("td",{parentName:"tr",align:null},"\u5e38\u91cf\u53c2\u6570")))),(0,o.yg)("h2",{id:"\u6269\u5c55-extract--load-node"},"\u6269\u5c55 Extract & Load Node"),(0,o.yg)("p",null,"Extract \u8282\u70b9\u662f\u57fa\u4e8e ",(0,o.yg)("a",{href:"https://flink.apache.org/"},"Apache Flink",(0,o.yg)("sup",null,"\xae"))," \u7684\nSource Connectors \u7528\u4e8e\u4ece\u4e0d\u540c\u7684\u6e90\u7cfb\u7edf\u62bd\u53d6\u6570\u636e\u3002\nLoad \u8282\u70b9\u662f\u57fa\u4e8e ",(0,o.yg)("a",{href:"https://flink.apache.org/"},"Apache Flink",(0,o.yg)("sup",null,"\xae"))," \u7684 Sink\nConnectors \u7528\u4e8e\u5c06\u6570\u636e\u52a0\u8f7d\u5230\u4e0d\u540c\u7684\u5b58\u50a8\u7cfb\u7edf\u3002"),(0,o.yg)("p",null,"Apache InLong Sort \u542f\u52a8\u65f6\u901a\u8fc7\u5c06\u4e00\u7ec4 Extract \u548c Load Node \u914d\u7f6e\u7ffb\u8bd1\u6210\u5bf9\u5e94\u7684 Flink SQL \u5e76\u63d0\u4ea4\u5230 Flink\n\u96c6\u7fa4\uff0c\u62c9\u8d77\u7528\u6237\u6307\u5b9a\u7684\u6570\u636e\u62bd\u53d6\u548c\u5165\u5e93\u4efb\u52a1\u3002"),(0,o.yg)("h3",{id:"\u589e\u52a0-extract--load-node-\u5b9a\u4e49"},"\u589e\u52a0 Extract & Load Node \u5b9a\u4e49"),(0,o.yg)("p",null,"\u81ea\u5b9a\u4e49 ",(0,o.yg)("inlineCode",{parentName:"p"},"Extract Node")," \u9700\u8981\u7ee7\u627f ",(0,o.yg)("inlineCode",{parentName:"p"},"org.apache.inlong.sort.protocol.node.ExtractNode"),"\n\u7c7b\uff0c\u81ea\u5b9a\u4e49 ",(0,o.yg)("inlineCode",{parentName:"p"},"Load Node")," \u9700\u8981\u7ee7\u627f ",(0,o.yg)("inlineCode",{parentName:"p"},"org.apache.inlong.sort.protocol.node.LoadNode")," \u7c7b\uff0c\n\u4e24\u8005\u90fd\u81f3\u5c11\u9700\u8981\u9009\u62e9\u6027\u5b9e\u73b0 ",(0,o.yg)("inlineCode",{parentName:"p"},"org.apache.inlong.sort.protocol.node.Node")," \u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5"),(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:null},"\u65b9\u6cd5\u540d"),(0,o.yg)("th",{parentName:"tr",align:null},"\u542b\u4e49"),(0,o.yg)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"getId"),(0,o.yg)("td",{parentName:"tr",align:null},"\u83b7\u53d6\u8282\u70b9ID"),(0,o.yg)("td",{parentName:"tr",align:null},"Inlong StreamSource Id")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"getName"),(0,o.yg)("td",{parentName:"tr",align:null},"\u83b7\u53d6\u8282\u70b9\u540d"),(0,o.yg)("td",{parentName:"tr",align:null},"Inlong StreamSource Name")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"getFields"),(0,o.yg)("td",{parentName:"tr",align:null},"\u83b7\u53d6\u5b57\u6bb5\u4fe1\u606f"),(0,o.yg)("td",{parentName:"tr",align:null},"Inlong Stream \u5b9a\u4e49\u7684\u5b57\u6bb5")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"getProperties"),(0,o.yg)("td",{parentName:"tr",align:null},"\u83b7\u53d6\u8282\u70b9\u989d\u5916\u5c5e\u6027"),(0,o.yg)("td",{parentName:"tr",align:null},"\u7a7a Map")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"tableOptions"),(0,o.yg)("td",{parentName:"tr",align:null},"\u83b7\u53d6 Flink SQL \u8868\u5c5e\u6027"),(0,o.yg)("td",{parentName:"tr",align:null},"\u8282\u70b9\u989d\u5916\u5c5e\u6027")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"genTableName"),(0,o.yg)("td",{parentName:"tr",align:null},"\u751f\u6210 Flink SQL \u8868\u540d"),(0,o.yg)("td",{parentName:"tr",align:null},"\u65e0\u9ed8\u8ba4\u503c")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"getPrimaryKey"),(0,o.yg)("td",{parentName:"tr",align:null},"\u83b7\u53d6\u4e3b\u952e"),(0,o.yg)("td",{parentName:"tr",align:null},"null")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"getPartitionFields"),(0,o.yg)("td",{parentName:"tr",align:null},"\u83b7\u53d6\u5206\u533a\u5b57\u6bb5"),(0,o.yg)("td",{parentName:"tr",align:null},"null")))),(0,o.yg)("h3",{id:"\u6269\u5c55-extractnode"},"\u6269\u5c55 ExtractNode"),(0,o.yg)("p",null,"\u6269\u5c55\u4e00\u4e2a ExtractNode \u5206\u4e3a\u4e09\u4e2a\u6b65\u9aa4\uff1a"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"\u7b2c\u4e00\u6b65"),"\uff1a\u7ee7\u627f ExtractNode \u7c7b\uff0c\u7c7b\u7684\u4f4d\u7f6e\u5728:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"inlong-sort/sort-common/src/main/java/org/apache/inlong/sort/protocol/node/ExtractNode.java\n")),(0,o.yg)("p",null,"\u5728\u5b9e\u73b0\u7684 ExtractNode \u4e2d\u6307\u5b9a connector\uff1b"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-Java"},'// \u7ee7\u627f ExtractNode \u7c7b\uff0c\u5b9e\u73b0\u5177\u4f53\u7684\u7c7b\uff0c\u4f8b\u5982 MongoExtractNode\n@EqualsAndHashCode(callSuper = true)\n@JsonTypeName("MongoExtract")\n@Data\npublic class MongoExtractNode extends ExtractNode implements Serializable {\n    @JsonInclude(Include.NON_NULL)\n    @JsonProperty("primaryKey")\n    private String primaryKey;\n    ...\n\n    @JsonCreator\n    public MongoExtractNode(@JsonProperty("id") String id, ...) { ... }\n\n    @Override\n    public Map<String\uff0c String> tableOptions() {\n        Map<String\uff0c String> options = super.tableOptions();\n        // \u914d\u7f6e\u6307\u5b9a\u7684 connector\uff0c\u8fd9\u91cc\u6307\u5b9a\u7684\u662f mongodb-cdc\n        options.put("connector", "mongodb-cdc");\n        ...\n        return options;\n    }\n}\n')),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"\u7b2c\u4e8c\u6b65"),"\uff1a\u5728 ExtractNode \u548c Node \u4e2d\u7684 JsonSubTypes \u6dfb\u52a0\u8be5 Extract"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-java"},'// \u5728 ExtractNode \u548c Node \u7684 JsonSubTypes \u4e2d\u6dfb\u52a0\u5b57\u6bb5\n...\n@JsonSubTypes({\n        @JsonSubTypes.Type(value = MongoExtractNode.class\uff0c name = "mongoExtract")\n})\n...\npublic abstract class ExtractNode implements Node{...}\n\n...\n@JsonSubTypes({\n        @JsonSubTypes.Type(value = MongoExtractNode.class\uff0c name = "mongoExtract")\n})\npublic interface Node {...}\n')),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"\u7b2c\u4e09\u6b65"),"\uff1a\u6269\u5c55 Sort Connector\uff0c\u67e5\u770b\u6b64\uff08",(0,o.yg)("inlineCode",{parentName:"p"},"inlong-sort/sort-connectors/mongodb-cdc"),"\uff09\u76ee\u5f55\u4e0b\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u5bf9\u5e94\u7684 connector\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5219\u9700\u8981\u53c2\u8003 Flink \u5b98\u65b9\u6587\u6863 ",(0,o.yg)("a",{parentName:"p",href:"https://nightlies.apache.org/flink/flink-docs-release-1.13/docs/connectors/datastream/overview/#datastream-connectors"},"DataStream Connectors ")," \u6765\u6269\u5c55\uff0c\n\u8c03\u7528\u5df2\u6709\u7684 Flink-connector\uff08\u4f8b\u5982",(0,o.yg)("inlineCode",{parentName:"p"},"inlong-sort/sort-connectors/mongodb-cdc"),"\uff09\u6216\u81ea\u884c\u5b9e\u73b0\u76f8\u5173\u7684 connector \u5747\u53ef\u3002"),(0,o.yg)("h3",{id:"\u6269\u5c55-load-node"},"\u6269\u5c55 Load Node"),(0,o.yg)("p",null,"\u6269\u5c55\u4e00\u4e2a LoadNode \u5206\u4e3a\u4e09\u4e2a\u6b65\u9aa4\uff1a"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"\u7b2c\u4e00\u6b65"),"\uff1a\u7ee7\u627f LoadNode \u7c7b\uff0c\u7c7b\u7684\u4f4d\u7f6e\u5728:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"inlong-sort/sort-common/src/main/java/org/apache/inlong/sort/protocol/node/LoadNode.java\n")),(0,o.yg)("p",null,"\u5728\u5b9e\u73b0\u7684LoadNode \u4e2d\u6307\u5b9a connector\uff1b"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-java"},'// \u7ee7\u627f LoadNode \u7c7b\uff0c\u5b9e\u73b0\u5177\u4f53\u7684\u7c7b\uff0c\u4f8b\u5982 KafkaLoadNode\n@EqualsAndHashCode(callSuper = true)\n@JsonTypeName("kafkaLoad")\n@Data\n@NoArgsConstructor\npublic class KafkaLoadNode extends LoadNode implements Serializable {\n    @Nonnull\n    @JsonProperty("topic")\n    private String topic;\n    ...\n\n    @JsonCreator\n    public KafkaLoadNode(@Nonnull @JsonProperty("topic") String topic, ...) {...}\n\n    // \u6839\u636e\u4e0d\u540c\u7684\u6761\u4ef6\u914d\u7f6e\u4f7f\u7528\u4e0d\u540c\u7684 connector\n    @Override\n    public Map<String\uff0c String> tableOptions() {\n        ...\n        if (format instanceof JsonFormat || format instanceof AvroFormat || format instanceof CsvFormat) {\n            if (StringUtils.isEmpty(this.primaryKey)) {\n                // kafka connector\n                options.put("connector", "kafka");\n                options.putAll(format.generateOptions(false));\n            } else {\n                // upsert-kafka connector\n                options.put("connector", "upsert-kafka");\n                options.putAll(format.generateOptions(true));\n            }\n        } else if (format instanceof CanalJsonFormat || format instanceof DebeziumJsonFormat) {\n            // kafka-inlong connector\n            options.put("connector", "kafka-inlong");\n            options.putAll(format.generateOptions(false));\n        } else {\n            throw new IllegalArgumentException("kafka load Node format is IllegalArgument");\n        }\n        return options;\n    }\n}\n')),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"\u7b2c\u4e8c\u6b65"),"\uff1a\u5728 LoadNode \u548c Node \u4e2d\u7684 JsonSubTypes \u6dfb\u52a0\u8be5 Load"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-java"},'// \u5728 LoadNode \u548c Node \u7684 JsonSubTypes \u4e2d\u6dfb\u52a0\u5b57\u6bb5\n...\n@JsonSubTypes({\n        @JsonSubTypes.Type(value = KafkaLoadNode.class, name = "kafkaLoad")\n})\n...\npublic abstract class LoadNode implements Node{...}\n\n...\n@JsonSubTypes({\n        @JsonSubTypes.Type(value = KafkaLoadNode.class, name = "kafkaLoad")\n})\npublic interface Node {...}\n')),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"\u7b2c\u4e09\u6b65"),"\uff1a\u6269\u5c55 Sort Connector\uff0cKafka \u7684 sort connector \u5728 ",(0,o.yg)("inlineCode",{parentName:"p"},"inlong-sort/sort-connectors/kafka")," \u76ee\u5f55\u4e0b\u3002"),(0,o.yg)("h3",{id:"\u96c6\u6210\u5230-entrance"},"\u96c6\u6210\u5230 Entrance"),(0,o.yg)("p",null,"\u5c06 Extract \u548c Load \u96c6\u6210\u5230 InLong Sort \u4e3b\u6d41\u7a0b\u4e2d\u3002\nInLong Sort \u7684\u5165\u53e3\u7c7b\u5728:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"inlong-sort/sort-core/src/main/java/org/apache/inlong/sort/Entrance.java\n")),(0,o.yg)("p",null,"Extract \u548c Load \u5982\u4f55\u96c6\u6210\u81f3 InLong Sort\uff0c\u53ef\u53c2\u8003\u4e0b\u9762\u7684 UT\uff0c\u9996\u5148\u6784\u5efa\u5bf9\u5e94\u7684 ExtractNode\u3001LoadNode\uff0c\u518d\u6784\u5efa NodeRelation\u3001StreamInfo\u3001GroupInfo\uff0c\u6700\u540e\u901a\u8fc7 FlinkSqlParser \u6267\u884c\u3002"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-java"},'public class MongoExtractToKafkaLoad extends AbstractTestBase {\n\n    // \u6784\u5efa MongoExtractNode\n    private MongoExtractNode buildMongoNode() {\n        List<FieldInfo> fields = Arrays.asList(new FieldInfo("name", new StringFormatInfo()), ...);\n        return new MongoExtractNode(..., fields, ...);\n    }\n\n    // \u6784\u5efa KafkaLoadNode\n    private KafkaLoadNode buildAllMigrateKafkaNode() {\n        List<FieldInfo> fields = Arrays.asList(new FieldInfo("name", new StringFormatInfo()), ...);\n        List<FieldRelation> relations = Arrays.asList(new FieldRelation(new FieldInfo("name", new StringFormatInfo()), ...), ...);\n        CsvFormat csvFormat = new CsvFormat();\n        return new KafkaLoadNode(..., fields, relations, csvFormat\uff0c ...);\n    }\n\n    // \u6784\u5efa NodeRelation\n    private NodeRelation buildNodeRelation(List<Node> inputs\uff0c List<Node> outputs) {\n        List<String> inputIds = inputs.stream().map(Node::getId).collect(Collectors.toList());\n        List<String> outputIds = outputs.stream().map(Node::getId).collect(Collectors.toList());\n        return new NodeRelation(inputIds, outputIds);\n    }\n\n    // \u6d4b\u8bd5\u4e3b\u6d41\u7a0b MongoDB to Kafka\n    @Test\n    public void testMongoDbToKafka() throws Exception {\n        EnvironmentSettings settings = EnvironmentSettings. ... .build();\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        ...\n        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env, settings);\n        Node inputNode = buildMongoNode();\n        Node outputNode = buildAllMigrateKafkaNode();\n        StreamInfo streamInfo = new StreamInfo("1", Arrays.asList(inputNode, outputNode), ...);\n        GroupInfo groupInfo = new GroupInfo("1", Collections.singletonList(streamInfo));\n        FlinkSqlParser parser = FlinkSqlParser.getInstance(tableEnv, groupInfo);\n        ParseResult result = parser.parse();\n        Assert.assertTrue(result.tryExecute());\n    }\n}\n')),(0,o.yg)("p",null,"\u540c\u65f6\uff0cSort \u8fd8\u589e\u52a0\u4e86 ",(0,o.yg)("inlineCode",{parentName:"p"},"InlongMetric")," \u548c ",(0,o.yg)("inlineCode",{parentName:"p"},"Metadata")," \u4e24\u4e2a\u989d\u5916\u7684\u63a5\u53e3\u7528\u6765\u652f\u6301\u66f4\u4e30\u5bcc\u7684\u8bed\u4e49\u3002"),(0,o.yg)("h2",{id:"inlongmetric"},"InlongMetric"),(0,o.yg)("p",null,"\u5982\u679c\u81ea\u5b9a\u4e49\u8282\u70b9\u9700\u8981\u4e0a\u62a5 Inlong \u6307\u6807\uff0c\u5219\u9700\u8981\u5b9e\u73b0 ",(0,o.yg)("inlineCode",{parentName:"p"},"org.apache.inlong.sort.protocol.InlongMetric")," \u63a5\u53e3\u3002\nInlong Sort \u89e3\u6790\u914d\u7f6e\u65f6\u4f1a\u5411 table option \u4e2d\u589e\u52a0\n",(0,o.yg)("inlineCode",{parentName:"p"},"'inlong.metric.labels' = 'groupId={g}&streamId={s}&nodeId={n}'")," \u542f\u52a8\u53c2\u6570\uff0c\u5e76\u4ee5\u6b64\u6765\u914d\u7f6e Inlong Audit\u3002\n\u8be6\u60c5\u8bf7\u67e5\u770b\n",(0,o.yg)("a",{parentName:"p",href:"#jump1"},"\u5982\u4f55\u96c6\u6210 Inlong Audit \u5230\u81ea\u5b9a\u4e49 Connector")),(0,o.yg)("h2",{id:"metadata"},"Metadata"),(0,o.yg)("p",null,"\u5982\u679c\u81ea\u5b9a\u4e49\u8282\u70b9\u9700\u8981\u6307\u5b9a\u67d0\u4e2a\u5b57\u6bb5\u4e3a Flink SQL \u7684 Metadata \u5b57\u6bb5\uff0c\u5219\u9700\u8981\u5b9e\u73b0 ",(0,o.yg)("inlineCode",{parentName:"p"},"org.apache.inlong.sort.protocol.Metadata")," \u63a5\u53e3\u3002\nInlong Sort \u89e3\u6790\u914d\u7f6e\u65f6\u4f1a\u81ea\u52a8\u5c06\u5bf9\u5e94\u7684\u5b57\u6bb5\u6807\u8bb0\u4e3a Metadata\u3002"),(0,o.yg)("h2",{id:"\u6269\u5c55-apache-flink-connector"},"\u6269\u5c55 Apache Flink Connector"),(0,o.yg)("p",null,"Sort \u57fa\u4e8e Apache Flink 1.15 \u7248\u672c\u5b9e\u73b0\u3002\u5982\u4f55\u6269\u5c55 Apache Flink Connector\n\u53ef\u4ee5\u53c2\u8003 ",(0,o.yg)("a",{href:"https://nightlies.apache.org/flink/flink-docs-release-1.15/zh/docs/dev/table/sourcessinks/"},"\nUser-defined Sources & Sinks")),(0,o.yg)("h2",{id:"\u5982\u4f55\u96c6\u6210-inlong-audit-\u5230\u81ea\u5b9a\u4e49-connector"},(0,o.yg)("span",{id:"jump1"},"\u5982\u4f55\u96c6\u6210 Inlong Audit \u5230\u81ea\u5b9a\u4e49 Connector")),(0,o.yg)("p",null,"Inlong Sort \u5c06\u6307\u6807\u4e0a\u62a5\u7684\u6d41\u7a0b\u5c01\u88c5\u5728\u4e86 ",(0,o.yg)("inlineCode",{parentName:"p"},"org.apache.inlong.sort.base.metric.SourceExactlyMetric"),"\n\u548c ",(0,o.yg)("inlineCode",{parentName:"p"},"org.apache.inlong.sort.base.metric.SinkExactlyMetric")," \u7c7b\u4e2d\u3002\u5f00\u53d1\u8005\u53ea\u9700\u8981\u6839\u636e Source/Sink \u7c7b\u578b\u521d\u59cb\u5316\u5bf9\u5e94\u7684 ",(0,o.yg)("inlineCode",{parentName:"p"},"Metric")," \u5bf9\u8c61\uff0c\u5219\u53ef\u4ee5\u5b9e\u73b0\u6307\u6807\u4e0a\u62a5\u3002"),(0,o.yg)("p",null,"\u901a\u5e38\u7684\u505a\u6cd5\u662f\u5728\u6784\u9020 Source/Sink \u65f6\u4f20\u9012\u4f8b\u5982 InLong Audit \u5730\u5740\uff0c\u5728\u521d\u59cb\u5316 Source/Sink \u7b97\u5b50\u8c03\u7528 open() \u65b9\u6cd5\u65f6\u8fdb\u884c\u521d\u59cb\u5316 ",(0,o.yg)("inlineCode",{parentName:"p"},"SourceExactlyMetric/SinkExactlyMetric")," \u5bf9\u8c61\u3002\n\u5728\u5904\u7406\u5b9e\u9645\u6570\u636e\u540e\u518d\u8c03\u7528\u5bf9\u5e94\u7684\u5ba1\u8ba1\u4e0a\u62a5\u65b9\u6cd5\u3002"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"public class StarRocksDynamicSinkFunctionV2<T> extends StarRocksDynamicSinkFunctionBase<T> {\n\n    private static final long serialVersionUID = 1L;\n    private static final Logger log = LoggerFactory.getLogger(StarRocksDynamicSinkFunctionV2.class);\n\n    private transient SinkExactlyMetric sinkExactlyMetric;\n\n    private String inlongMetric;\n    private String auditHostAndPorts;\n    private String auditKeys;\n    private String stateKey;\n\n    public StarRocksDynamicSinkFunctionV2(StarRocksSinkOptions sinkOptions,\n            TableSchema schema,\n            StarRocksIRowTransformer<T> rowTransformer, String inlongMetric,\n            String auditHostAndPorts, String auditKeys) {\n        this.sinkOptions = sinkOptions;\n        \n        // pass the params of inlong audit\n        this.auditHostAndPorts = auditHostAndPorts;\n        this.inlongMetric = inlongMetric;\n        this.auditKeys = auditKeys;\n    }\n\n    @Override\n    public void open(Configuration parameters) {\n\n        // init SinkExactlyMetric in open()\n        MetricOption metricOption = MetricOption.builder().withInlongLabels(inlongMetric)\n                .withAuditAddress(auditHostAndPorts)\n                .withAuditKeys(auditKeys)\n                .build();\n\n        if (metricOption != null) {\n            sinkExactlyMetric = new SinkExactlyMetric(metricOption, getRuntimeContext().getMetricGroup());\n        }\n    }\n    \n    @Override\n    public void invoke(T value, Context context)\n            throws IOException, ClassNotFoundException, JSQLParserException {\n        Object[] data = rowTransformer.transform(value, sinkOptions.supportUpsertDelete());\n\n        sinkManager.write(\n                null,\n                sinkOptions.getDatabaseName(),\n                sinkOptions.getTableName(),\n                serializer.serialize(schemaUtils.filterOutTimeField(data)));\n\n        // output audit after write data to sink\n        if (sinkExactlyMetric != null) {\n            sinkExactlyMetric.invoke(1, getDataSize(value), schemaUtils.getDataTime(data));\n        }\n    }\n")))}c.isMDXComponent=!0},50557:(n,e,t)=>{t.d(e,{A:()=>a});const a=t.p+"assets/images/sort_uml-d90bb6f0835781e064b7417f266b7b30.png"}}]);